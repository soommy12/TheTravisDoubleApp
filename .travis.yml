language: android
dist: trusty
jdk: oraclejdk8

before_install:
  - wget https://services.gradle.org/distributions/gradle-6.1.1-all.zip
  - unzip -qq gradle-6.1.1-all.zip
  - export GRADLE_HOME=$PWD/gradle-6.1.1
  - export PATH=$GRADLE_HOME/bin:$PATH
  - gradle -v
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platforms;android-30"
  - yes | sdkmanager "build-tools;30.0.2"

#before_script:
#    - mkdir -p "$ANDROID_HOME/licenses"
#    - cp ./google-licenses/* "$ANDROID_HOME/licenses/"
    
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

env:
 global:
   # install timeout in minutes (2 minutes by default)
    - ADB_INSTALL_TIMEOUT=8

android:
  components:
    - tools
    - platform-tools

    # Additional components
    #- extra-google-google_play_services
    #- extra-google-m2repository
    #- extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-x86-android-28
    - sys-img-armeabi-v7a-addon-google_apis-google-28

  licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    - 'build-tools.+'
    
script:
- ./gradlew build check

deploy:
  - provider: script
    skip_cleanup: true
    script: ./gradlew assembleDebug
    on:
      branch: develop

  - provider: script
    skip_cleanup: true
    script: ./gradlew assembleGnitset
    on:
      branch: testing

  - provider: script
    skip_cleanup: true
    script: ./gradlew assembleRelease
    on:
      branch: release

  - provider: script
    skip_cleanup: true
    script: ./gradlew assembleProduction
    on:
      branch: master